#!/bin/bash
export DEBIAN_FRONTEND=noninteractive

sudo apt-get update
sudo apt-get -q -y install linux-image-extra-`uname -r`
sudo apt-get -q -y install nfs-common
sudo mkdir /cluster
sudo mount -t nfs -o proto=tcp,port=2049,noatime,rsize=32768,wsize=32768 10.0.11.163:/cluster /cluster
sudo apt-get -q -y install apparmor-utils
[ -e /usr/lib/apt/methods/https ] || {
  sudo apt-get install apt-transport-https
}

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
sudo sh -c "echo deb https://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"
sudo apt-get update
sudo apt-get -q -y --force-yes install lxc-docker

sudo groupadd docker
sudo gpasswd -a ubuntu docker

sudo mkfs -t ext4 /dev/xvdf
sudo mkdir /scratch
sudo mount /dev/xvdf /scratch

sudo mkdir /scratch/docker
sudo mv /var/lib/docker /scratch/docker
sudo ln -s /scratch/docker /var/lib/docker
sudo echo 'DOCKER_OPTS="-g /scratch/docker -G docker"' >> /etc/default/docker
sudo service docker restart

sudo apt-get -q -y install parallel

sudo apt-get -q -y install python-pip
sudo pip install awscli
sudo mkdir ~/.aws

sudo sudo mkdir /scratch/tmp
sudo chmod -R 777 /scratch/tmp
sudo touch /scratch/done

sudo bash -c "cat /cluster/ec2/passwd  >> /etc/passwd"

sudo usermod -a -G docker USER
sudo service docker restart

printf "[default]\naws_access_key_id=AKEY\naws_secret_access_key=SKEY" > ~/.aws/config

iname=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)
aws --region us-east-1 --output text ec2 create-tags --resources $iname --tags Key=Name,Value=docker-USER-NUM

GPUMODE=GPUMODE_PARAM
if [ $GPUMODE = true ]; then
	/sbin/modprobe nvidia 
	if [ "$?" -eq 0 ]; then 
    	# Count the number of NVIDIA controllers found. 
    	NVDEVS=`lspci | grep -i NVIDIA` 
    	N3D=`echo "$NVDEVS" | grep "3D controller" | wc -l` 
    	NVGA=`echo "$NVDEVS" | grep "VGA compatible controller" | wc -l` 

    	N=`expr $N3D + $NVGA - 1` 
    	for i in `seq 0 $N`; do 
	  		mknod -m 666 /dev/nvidia$i c 195 $i 
	  	done 

    	mknod -m 666 /dev/nvidiactl c 195 255 
	else 
		exit 1 
	fi

	/sbin/modprobe nvidia-uvm 

	if [ "$?" -eq 0 ]; then 
  	# Find out the major device number used by the nvidia-uvm driver 
  	D=`grep nvidia-uvm /proc/devices | awk '{print $1}'` 

  	mknod -m 666 /dev/nvidia-uvm c $D 0 
	else 
    	exit 1 
	fi
fi

sudo -u USER bash -c "cat /cluster/ec2/tmp/RUNCMD | parallel -j 100% 2>&1 | tee /cluster/ec2/$iname.txt"
aws ses send-email --from EMAIL --to EMAIL --text "$(tail -n 50 /var/log/cloud-init-output.log)" --subject ec2_run_complete --region REALM
cp /var/log/cloud-init-output.log /tmp/nohup.txt
sirname=$(aws --region us-east-1 --output text ec2 describe-spot-instance-requests | grep $iname | cut -d$'\t' -f6)
rm -f RUNCMD
aws ec2 cancel-spot-instance-requests --spot-instance-request-ids $sirname --region REALM
sudo -u USER bash -c "cp /tmp/nohup.txt /cluster/ec2/$iname-nohup.txt"
aws ec2 terminate-instances --instance-ids $iname --region REALM
